{"version":3,"sources":["data.js","assets/icon_minus.svg","components/Input.jsx","assets/icon_plus.svg","components/fieldArray.jsx","Form.jsx","hooks/useFetch.js","App.js","reportWebVitals.js","index.js"],"names":["products","product_name","units","name","price","Input","id","label","type","placeholder","register","value","error","index","className","htmlFor","ref","length","SelectDistribution","control","errors","useWatch","defaultValue","required","disabled","distribution","SelectPaymentType","payment","min","Date","toLocaleString","slice","expired_date","rows","TotalPrice","reduce","acc","val","itemsPrice","quantity","ProductItem","remove","item","product","productsUnit","map","i","unit","productsItem","find","filter","includes","onClick","src","minusIcon","alt","validate","positive","parseInt","pattern","readOnly","Fields","setValue","getValues","useFieldArray","fields","append","plusIcon","width","defaultValues","Form","useState","result","setResult","useForm","mode","handleSubmit","formState","reset","data","url","setData","loading","setLoading","useEffect","a","fetch","response","json","fetchData","useFetch","onSubmit","user","employee_name","console","log","isValid","JSON","stringify","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7f505b42.chunk.js","sourcesContent":["export const products = [\n  {\n    product_name: \"Morning Dew Milk\",\n    units: [\n      { name: \"pak\", price: 20000 },\n      { name: \"pcs\", price: 10000 }\n    ]\n  },\n  {\n    product_name: \"Le Minerale 600ml\",\n    units: [\n      { name: \"karton\", price: 150000 },\n      { name: \"pak\", price: 50000 }\n    ]\n  },\n  {\n    product_name: \"Greenfields Full Cream Milk 1L\",\n    units: [\n      { name: \"karton\", price: 700000 },\n      { name: \"pak\", price: 350000 },\n      { name: \"pcs\", price: 18000 }\n    ]\n  }\n]\n","export default __webpack_public_path__ + \"static/media/icon_minus.3bd10a3b.svg\";","import { useWatch } from \"react-hook-form\"\nimport { products as productsItem } from \"../data\";\nimport minusIcon from '../assets/icon_minus.svg'\n\nexport default function Input({\n  id,\n  label,\n  type,\n  placeholder,\n  register,\n  value,\n  name,\n  error,\n  index\n}) {\n  return (\n    <div className=\"form-group col\">\n      <label htmlFor={id}>\n        {label}\n        <span className=\"text-danger\">*</span>\n      </label>\n      <input\n        id={id}\n        className=\"form-control\"\n        type={type}\n        placeholder={placeholder}\n        name={name}\n        ref={register}\n        value={value}\n      />\n      {\n        error?.length > 0 &&\n        error[index]?.[id]?.type === \"required\" &&\n        <span className=\"text-danger\">Required</span>\n      }\n      {\n        error?.length > 0 &&\n        error[index]?.[id]?.type === \"positive\" &&\n        <span className=\"text-danger\">{label} must be &gt; 0</span>\n      }\n    </div>\n  )\n}\n\nexport const SelectDistribution = ({ control, register, errors }) => {\n  const name = useWatch({\n    control,\n    name: 'name',\n    defaultValue: ''\n  })\n\n  return (\n    <>\n      <label htmlFor=\"distribution\">\n        Distribution Center\n                <span className=\"text-danger\">*</span>\n      </label>\n      {\n        !name ? (\n          <p className=\"p-3 shadow\">No data available</p>\n        ) : (\n            <select\n              id=\"distribution\"\n              className=\"form-control\"\n              name=\"distribution\"\n              defaultValue=\"\"\n              ref={register({ required: true })}\n            >\n              <option value=\"\" disabled>Distribution Center</option>\n              <option value=\"tangerang\">DC Tangerang</option>\n              <option value=\"cikarang\">DC Cikarang</option>\n            </select>\n          )\n      }\n      {errors.distribution && <span className=\"text-danger\">Required</span>}\n    </>\n  )\n}\n\nexport const SelectPaymentType = ({ control, register, errors }) => {\n  const name = useWatch({\n    control,\n    name: 'name',\n    defaultValue: ''\n  })\n\n  const distribution = useWatch({\n    control,\n    name: 'distribution',\n    defaultValue: ''\n  })\n\n  return (\n    <>\n      {\n        name && distribution && (\n          <>\n            <div className=\"form-row\">\n              <div className=\"form-group col-md-5\">\n                <label htmlFor=\"payment\">\n                  Payment Type\n                      <span className=\"text-danger\">*</span>\n                </label>\n                <select\n                  id=\"payment\"\n                  className=\"form-control\"\n                  name=\"payment\"\n                  defaultValue=\"\"\n                  ref={register({ required: true })}\n                >\n                  <option value=\"\" disabled>Payment Type</option>\n                  <option value=\"cash1\">Cash H+1</option>\n                  <option value=\"cash3\">Cash H+3</option>\n                  <option value=\"cash7\">Cash H+7</option>\n                  <option value=\"transfer1\">Transfer H+1</option>\n                  <option value=\"transfer3\">Transfer H+3</option>\n                  <option value=\"transfer7\">Transfer H+7</option>\n                </select>\n                {errors.payment && <span className=\"text-danger\">Required</span>}\n              </div>\n              <div className=\"form-group col-md-5\">\n                <label htmlFor=\"expired_date\">\n                  Expired Date\n                      <span className=\"text-danger\">*</span>\n                </label>\n                <input\n                  id=\"expired\"\n                  className=\"form-control\"\n                  type=\"date\"\n                  name=\"expired_date\"\n                  min={new Date().toLocaleString('sv').slice(0, 10)}\n                  ref={register({ required: true })}\n                  defaultValue=\"0000-00-00\"\n                  placeholder=\"Expired Date\"\n                />\n                {errors.expired_date && <span className=\"text-danger\">Required</span>}\n              </div>\n            </div>\n            <div className=\"form-row\">\n              <div className=\"form-group col-md-8\">\n                <label htmlFor=\"notes\">Notes</label>\n                <textarea\n                  id=\"notes\"\n                  className=\"form-control\"\n                  rows={4}\n                  defaultValue={\"\"}\n                  name=\"notes\"\n                  ref={register()}\n                />\n              </div>\n            </div>\n          </>\n        )\n      }\n    </>\n  )\n}\n\nexport const TotalPrice = ({ control }) => {\n  const products = useWatch({\n    control,\n    name: 'products',\n    defaultValue: []\n  })\n\n  return (\n    <h4>\n      <strong>\n        {products.length > 0 && products?.reduce((acc, val) => {\n          const itemsPrice = val.quantity * val.price\n          if (!itemsPrice) {\n            return acc\n          }\n          return acc + itemsPrice\n        }, 0)}\n      </strong>\n    </h4>\n  )\n}\n\nexport const ProductItem = ({ control, register, errors, index, remove, item }) => {\n  const products = useWatch({\n    control,\n    name: 'products',\n    defaultValue: []\n  })\n\n  // console.log(`products${index}`, products)\n\n  const product = products?.length > 0 && products[index]\n  const productsUnit = products.map(i => i.unit)\n  const units = productsItem\n    .find(item => item.product_name === product.product_name)?.units\n\n  const filtered = units?.filter(unit => !productsUnit.includes(unit.name))\n  const price = units?.find(item => item.name === product.unit)?.price || 0\n\n  // console.log('productsUnit', productsUnit)\n  // console.log('filtered', filtered)\n  return (\n    <>\n      <button\n        type=\"button\"\n        onClick={() => remove(index)}\n        className=\"delete\"\n      >\n        <img src={minusIcon} alt=\"delete\" />\n      </button>\n      <div className=\"form-row\">\n        <div className=\"form-group col-md-7\">\n          <label htmlFor=\"product\">\n            Product\n            <span className=\"text-danger\">*</span>\n          </label>\n          <select\n            id=\"product\"\n            className=\"form-control\"\n            name={`products[${index}].product_name`}\n            defaultValue={item.product_name}\n            ref={register({ required: true })}\n          >\n            <option value=\"\" disabled>Product Name</option>\n            {\n              productsItem.map(product => (\n                <option\n                  key={product.product_name}\n                  value={product.product_name}\n                >\n                  {product.product_name}\n                </option>\n              ))\n            }\n          </select>\n          {errors.product && <span className=\"text-danger\">Required</span>}\n        </div>\n        <div className=\"form-group col-md-3\">\n          <label htmlFor=\"unit\">\n            Unit\n                <span className=\"text-danger\">*</span>\n          </label>\n          <select\n            id=\"unit\"\n            className=\"form-control\"\n            name={`products[${index}].unit`}\n            defaultValue={item.unit}\n            ref={register({ required: true })}\n          >\n            {\n              !product?.product_name ? (\n                <option value=\"\" disabled>No Data Available</option>\n              ) : (\n                  units?.map(unit => (\n                    <option\n                      key={unit.name}\n                      value={unit.name}\n                    >\n                      {unit.name}\n                    </option>\n                  ))\n                )\n            }\n          </select>\n          {errors.products?.length > 0 && errors.products[index]?.unit && <span className=\"text-danger\">Required</span>}\n        </div>\n      </div>\n      <div className=\"form-row\">\n        <div className=\"form-group col\">\n          <label htmlFor=\"quantity\">\n            Quantity\n            <span className=\"text-danger\">*</span>\n          </label>\n          <input\n            id=\"quantity\"\n            className=\"form-control\"\n            type=\"number\"\n            placeholder=\"0\"\n            name={`products[${index}].quantity`}\n            defaultValue={item.quantity}\n            ref={register({\n              required: true,\n              validate: {\n                positive: value => parseInt(value) > 0\n              },\n              pattern: /\\d+/\n            })}\n          />\n          {\n            errors.products?.length > 0 &&\n            errors.products[index]?.quantity?.type === \"required\" &&\n            <span className=\"text-danger\">Required</span>\n          }\n          {\n            errors.products?.length > 0 &&\n            errors.products[index]?.quantity?.type === \"positive\" &&\n            <span className=\"text-danger\">Quantity must be &gt; 0</span>\n          }\n        </div>\n        <Input\n          id=\"price\"\n          label=\"Price\"\n          type=\"number\"\n          placeholder=\"0\"\n          name={`products[${index}].price`}\n          register={register({\n            required: true,\n            validate: {\n              positive: value => parseInt(value) > 0\n            }\n          })}\n          defaultValue={item.price}\n          value={price}\n          error={errors.products}\n          index={index}\n        />\n        <div className=\"form-group col-5 text-right\">\n          <label htmlFor=\"price\">Total Price</label>\n          <input\n            id=\"price\"\n            type=\"number\"\n            className=\"form-control text-right\"\n            placeholder={(() => {\n              if (products.length > 0 && products[index]) {\n                const quantity = products[index] && products[index].quantity\n                const price = products[index] && products[index].price\n                if (!quantity && !price) {\n                  return 0\n                }\n                return quantity * price\n              }\n            })()}\n            readOnly\n          />\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-5 ml-auto\">\n          <hr />\n          <div className=\"row justify-content-between\">\n            <div className=\"col\">\n              <strong>Total Nett Price</strong>\n            </div>\n            <div className=\"col text-right\">\n              <strong>\n                {(() => {\n                  if (products.length > 0 && products[index]) {\n                    const quantity = products[index] && products[index].quantity\n                    const price = products[index] && products[index].price\n                    if (!quantity && !price) {\n                      return 0\n                    }\n                    return quantity * price\n                  }\n                })()}\n              </strong>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/icon_plus.0db24ee9.svg\";","import { useFieldArray, useWatch } from \"react-hook-form\";\nimport { ProductItem } from \"./Input\";\nimport plusIcon from '../assets/icon_plus.svg'\n\n// let renderCount = 0;\n\nexport default function Fields({ control, register, setValue, getValues, errors }) {\n  const name = useWatch({\n    control,\n    name: 'name',\n    defaultValue: ''\n  })\n\n  const distribution = useWatch({\n    control,\n    name: 'distribution',\n    defaultValue: ''\n  })\n\n  const { fields, append, remove } = useFieldArray({\n    control,\n    name: \"products\"\n  });\n\n  // renderCount++;\n\n  return (\n    <>\n      {\n        name && distribution && (\n          <>\n            {fields.map((item, index) => {\n              return (\n                <div className=\"product-item\" key={index}>\n                  <ProductItem\n                    control={control}\n                    register={register}\n                    errors={errors}\n                    index={index}\n                    remove={remove}\n                    item={item}\n                  />\n                </div>\n              );\n            })}\n\n            <section>\n              <button\n                type=\"button\"\n                className=\"btn btn-warning text-white\"\n                onClick={() => {\n                  append({\n                    product_name: \"\",\n                    units: [\n                      { name: \"\", price: 0 },\n                      { name: \"\", price: 0 }\n                    ]\n                  });\n                }}\n              >\n                <strong>NEW ITEM <img src={plusIcon} alt=\"add\" width=\"20\" /></strong>\n              </button>\n            </section>\n          </>\n        )\n      }\n\n      {/* <span className=\"counter\">Render Count: {renderCount}</span> */}\n    </>\n  );\n}\n","import { useForm } from \"react-hook-form\";\nimport useFetch from './hooks/useFetch'\nimport FieldArray from './components/fieldArray'\nimport { SelectDistribution, SelectPaymentType, TotalPrice } from \"./components/Input\";\nimport { useState } from \"react\";\n\nconst defaultValues = {\n  name: '',\n  distribution: '',\n  products: [\n    {\n      product_name: \"\",\n      units: [\n        { name: \"\", price: 0 }\n      ]\n    },\n  ]\n}\n\nexport default function Form() {\n  const [result, setResult] = useState(null)\n  const {\n    register,\n    handleSubmit,\n    formState,\n    getValues,\n    errors,\n    control,\n    reset,\n    setValue\n  } = useForm({\n    defaultValues,\n    mode: 'onTouched'\n  });\n  const { data } = useFetch('http://dummy.restapiexample.com/api/v1/employees')\n  // const { data } = useFetch('https://jsonplaceholder.typicode.com/users')\n  const onSubmit = data => setResult(data)\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <div className=\"row\">\n        <div className=\"col-3\">\n          <h5>\n            <strong>Detail</strong>\n          </h5>\n        </div>\n        <div className=\"col-9\">\n          <div className=\"form-row\">\n            <div className=\"form-group col-md-8\">\n              <label htmlFor=\"name\">\n                Name\n                <span className=\"text-danger\">*</span>\n              </label>\n              <select\n                id=\"name\"\n                className=\"form-control\"\n                name=\"name\"\n                placeholder=\"Name\"\n                defaultValue=\"\"\n                ref={register({ required: true })}\n              >\n                <option value=\"\" disabled>Name</option>\n                {\n                  data?.data?.map(user => (\n                    <option key={user.id} value={user.employee_name}>{user.employee_name}</option>\n                  ))\n                }\n              </select>\n              {errors.name && <span className=\"text-danger\">Required</span>}\n            </div>\n            <div className=\"form-group col-md-6\">\n              <SelectDistribution\n                control={control}\n                errors={errors}\n                register={register}\n              />\n            </div>\n          </div>\n          <SelectPaymentType\n            control={control}\n            errors={errors}\n            register={register}\n          />\n        </div>\n      </div>\n\n      <hr />\n\n      <div className=\"row\">\n        <div className=\"col-3\">\n          <h5>\n            <strong>Products</strong>\n          </h5>\n        </div>\n        <div className=\"col-9\">\n\n          <FieldArray\n            {...{ control, register, getValues, defaultValues, setValue, errors }}\n          />\n\n          <div className=\"row\">\n            <div className=\"col-5 ml-auto\">\n              <hr />\n              <div className=\"row justify-content-between\">\n                <div className=\"col\">\n                  <h4>\n                    <strong>Total</strong>\n                  </h4>\n                </div>\n                <div className=\"col text-right\">\n                  <TotalPrice control={control} />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <hr />\n\n      <div className=\"text-right\">\n        <button\n          type=\"submit\"\n          className=\"btn\"\n        >\n          Submit\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn\"\n          onClick={() => console.log('formState', formState)}\n        >\n          CANCEL\n        </button>\n        <button\n          type=\"submit\"\n          className={`btn ${!formState.isValid ? 'btn-secondary' : 'btn-success'}`}\n          disabled={!formState.isValid}\n        >\n          CONFIRM\n        </button>\n      </div>\n\n      <hr />\n      <pre>\n        {result && JSON.stringify(result, null, 2)}\n      </pre>\n    </form>\n  )\n}\n","import { useState, useEffect } from \"react\";\n\nexport default function useFetch(url) {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    async function fetchData() {\n      const response = await fetch(url);\n      const json = await response.json();\n      setData(json);\n      setLoading(false);\n    }\n\n    fetchData();\n  }, [url]);\n\n  return { loading, data };\n};\n","import './App.css';\nimport Form from './Form';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <h4 className=\"py-3\">\n        <strong>\n          Create Order\n        </strong>\n      </h4>\n      <div className=\"card\">\n        <div className=\"card-body\">\n          <Form />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}